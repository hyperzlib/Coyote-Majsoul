# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and Package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install frontend packages
      run: npm ci
      working-directory: ./frontend
    - name: Build frontend
      run: npm run build --if-present
      working-directory: ./frontend
    - name: Install packages
      run: npm ci
    - name: Build Tampermonkey script
      run: npm run build:user --if-present
    - name: Archive Tampermonkey script
      uses: actions/upload-artifact@v4
      with:
        name: majsoul-analyser.user.js
        path: |
          dist
    - name: Build server
      run: npm run build:server --if-present
    - name: Download proxinject
      uses: robinraju/release-downloader@v1
      with:
        repository: 'PragmaTwice/proxinject'
        latest: true
        preRelease: true
        fileName: proxinject-*.zip
        out-file-path: proxinject/
        extract: true
    - name: Copy proxinject
      run: mkdir -p build/bin/proxyinject && cp -r proxinject/release build/bin/proxinject
    - name: Build Windows executable
      run: npm run build:pkg:assets && npm run build:pkg:win
    - name: Archive Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: coyote-majsoul-windows-amd64-dist
        path: |
          build
    - name: Clean up build artifacts
      run: npm run build:pkg:clean
    - name: Build Linux executable
      run: npm run build:pkg:assets && npm run build:pkg:linux
    - name: Archive Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: coyote-majsoul-linux-amd64-dist
        path: |
          build
